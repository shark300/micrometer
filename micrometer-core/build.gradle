plugins {
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'nebula.optional-base'

dependencies {
    // JSR-305 only used for non-required meta-annotations
    compile "com.google.code.findbugs:jsr305:latest.release", optional

    compile 'org.hdrhistogram:HdrHistogram:latest.release'
    compile('org.latencyutils:LatencyUtils:latest.release') {
        exclude group: 'org.hdrhistogram', module: 'HdrHistogram'
    }

    // instrumentation options
    compile 'io.dropwizard.metrics:metrics-core:4.0.+', optional

    // cache monitoring
    compile 'com.google.guava:guava:latest.release', optional
    compile 'com.github.ben-manes.caffeine:caffeine:latest.release', optional
    compile 'net.sf.ehcache:ehcache:latest.release', optional
    compile 'javax.cache:cache-api:latest.release', optional
    compile 'com.hazelcast:hazelcast:3.+', optional
    compile 'org.hibernate:hibernate-entitymanager:latest.release', optional

    // server runtime monitoring
    compile 'org.eclipse.jetty:jetty-server:9.+', optional
    compile 'org.apache.tomcat.embed:tomcat-embed-core:8.+', optional

    // apache httpcomponents monitoring
    compile 'org.apache.httpcomponents:httpclient:4.5.6', optional
    compile 'org.apache.httpcomponents:httpasyncclient:4.1.4', optional

    // hystrix monitoring
    // metrics are better with https://github.com/Netflix/Hystrix/pull/1568 introduced
    // in hystrix 1.5.12, but Netflix re-released 1.5.11 as 1.5.18 late in 2018.
    // <=1.5.11 or 1.5.18 doesn't break with Micrometer, but open metrics won't be correct necessarily.
    compile 'com.netflix.hystrix:hystrix-core:1.5.12', optional

    // log monitoring
    compile 'ch.qos.logback:logback-classic:1.2.+', optional
    compile 'org.apache.logging.log4j:log4j-core:2.+', optional

    // reactor
    compile 'io.projectreactor:reactor-core:latest.release', optional
    compile 'io.projectreactor.netty:reactor-netty:latest.release', optional

    // @Timed AOP
    compile 'org.aspectj:aspectjweaver:1.8.+', optional

    compile 'com.squareup.okhttp3:okhttp:latest.release', optional

    compile 'org.mongodb:mongo-java-driver:latest.release', optional

    compile 'org.jooq:jooq:latest.release', optional

    testCompile 'io.projectreactor:reactor-test:latest.release'

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.+'

    // Eclipse still needs this (as of 4.7.1a)
//    testRuntime 'org.junit.platform:junit-platform-launcher:latest.release'

    testCompile 'org.mockito:mockito-core:latest.release'

    testCompile 'org.hsqldb:hsqldb:latest.release'

    testCompile 'org.eclipse.jetty:jetty-client:9.+', optional

    // dependency injection tests
    testCompile 'javax.inject:javax.inject:1'
    testCompile 'org.springframework:spring-context:4.+'
    testCompile 'org.springframework:spring-test:4.+'
    testCompile 'com.google.inject:guice:4.1.0'

    testCompile 'com.h2database:h2:latest.release'

    // Uncomment these if you are interested in testing injection with dagger in MeterRegistryInjectionTest
//    testCompile 'com.google.dagger:dagger:2.11'
//    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.11'

    testCompile 'org.assertj:assertj-core:latest.release'

    testCompile 'org.ehcache:ehcache:latest.release'

    // Pin version temporarily to restore builds.
    testCompile 'org.apache.kafka:kafka-clients:2.3.1'

    testCompile 'ru.lanwen.wiremock:wiremock-junit5:1.2.0', {
        exclude group: 'com.github.tomakehurst', module: 'wiremock'
    }
    testCompile 'com.github.tomakehurst:wiremock-jre8:latest.release'

    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:latest.release'
}
